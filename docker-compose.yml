services:
  # PostgreSQL Database 1 - Orders, Customers, Order Items
  postgres_db1:
    image: postgres:15
    container_name: ecommerce_db1
    environment:
      POSTGRES_DB: ecommerce_orders
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_db1_data:/var/lib/postgresql/data
      - ./database/init_db1.sql:/docker-entrypoint-initdb.d/init_db1.sql
    networks:
      - data_pipeline
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database 2 - Product Descriptions
  postgres_db2:
    image: postgres:15
    container_name: ecommerce_db2
    environment:
      POSTGRES_DB: ecommerce_products
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_db2_data:/var/lib/postgresql/data
      - ./database/init_db2.sql:/docker-entrypoint-initdb.d/init_db2.sql
    networks:
      - data_pipeline
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Data Warehouse
  postgres_warehouse:
    image: postgres:15
    container_name: data_warehouse
    environment:
      POSTGRES_DB: data_warehouse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres_warehouse_data:/var/lib/postgresql/data
      - ./database/init_warehouse.sql:/docker-entrypoint-initdb.d/init_warehouse.sql
    networks:
      - data_pipeline
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Airflow Database Initialization
  airflow-init:
    image: apache/airflow:2.7.0
    container_name: airflow_init
    user: "50000:0"
    depends_on:
      postgres_warehouse:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres_warehouse:5432/data_warehouse
      AIRFLOW__CORE__FERNET_KEY: 'lK2NzOG26X7GGNnUjEEqZwzJJmXJ3CyushGRI6qjMmY='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
      _AIRFLOW_WWW_USER_FIRSTNAME: Admin
      _AIRFLOW_WWW_USER_LASTNAME: User
      _AIRFLOW_WWW_USER_EMAIL: admin@example.com
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "
    networks:
      - data_pipeline

  # Apache Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.7.0
    container_name: airflow_webserver
    user: "50000:0"
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres_warehouse:5432/data_warehouse
      AIRFLOW__CORE__FERNET_KEY: 'lK2NzOG26X7GGNnUjEEqZwzJJmXJ3CyushGRI6qjMmY='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - data_pipeline
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Apache Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.7.0
    container_name: airflow_scheduler
    user: "50000:0"
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres_warehouse:5432/data_warehouse
      AIRFLOW__CORE__FERNET_KEY: 'lK2NzOG26X7GGNnUjEEqZwzJJmXJ3CyushGRI6qjMmY='
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: scheduler
    networks:
      - data_pipeline

volumes:
  postgres_db1_data:
  postgres_db2_data:
  postgres_warehouse_data:

networks:
  data_pipeline:
    driver: bridge
